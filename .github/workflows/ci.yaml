name: Go-CI

on:
  push:
    branches: ["main", "OPB-001"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  testing:
    runs-on: [self-hosted, op-runner]
    #     timeout-minutes: 10
    environment: lab
    steps:
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: solte/op-bot
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha

      - name: Tags
        run: |
          echo "The tag for this commit is ${{ github.ref }}"

      - name: Coping repository files
        uses: actions/checkout@v3

      - name: Setup docker env
        run: |
          echo 'PSQL_HOST=${{secrets.PSQL_HOST}}' > ./deployments/.env
          echo 'PSQL_DBNAME=${{secrets.PSQL_DBNAME}}' >> ./deployments/.env
          echo 'PSQL_PASSWORD=${{secrets.PSQL_PASSWORD}}' >> ./deployments/.env
          echo 'PSQL_USERNAME=${{secrets.PSQL_USERNAME}}' >> ./deployments/.env
          echo 'TG_TOKEN=${{secrets.TG_TOKEN}}' >> ./deployments/.env
          echo 'VERSION=lab-0.0.1' >> ./deployments/.env

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.20"

      - name: Go mod tidy
        run: go mod tidy

      - name: Go mod download
        run: go mod download

      - name: Go mod vendors
        run: go mod vendor

      - name: Go Mod Verify
        run: go mod verify

      # Run vet & lint on the code
      - name: Run vet & lint
        run: |
          go vet ./...

      - name: Build & start containers
        run: make ci_up

      - name: Run unit tests
        run: go test -v ./...

      - name: Build executable
        run: make build_worker

      - name: clearup
        run: make ci_teardown

  # golangci:
  #   name: lint
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/setup-go@v4
  #       with:
  #         go-version: "1.20"
  #         cache: false
  #     - uses: actions/checkout@v3

  #     - name: prepare lint
  #       run: go list -e -compiled -test=true -export=false -deps=true -find=false -tags= -- ./... > /dev/null

  #     - name: golangci-lint
  #       uses: golangci/golangci-lint-action@v3
  #       with:
  #         # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
  #         version: v1.29

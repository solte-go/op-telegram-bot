version: "3.7"
services:
  prometheus:
    image: prom/prometheus:v2.43.0
    container_name: prometheus_dev
    ports:
      - "9090:9090"
    expose:
      - 9090
    volumes:
      - ./prometheus_ci_cfg.yaml:/etc/prometheus/cfg.yaml
    command:
      - "--storage.tsdb.retention.time=30d"
      - "--config.file=/etc/prometheus/cfg.yaml"
    networks:
      - bot-network

  postgres:
    container_name: postgres_dev_db
    image: postgres:15.2
    environment:
      - POSTGRES_PASSWORD=$PSQL_PASSWORD
    volumes:
      - ./init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
    ports:
      - "5432:5432"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${PSQL_USERNAME} -d ${PSQL_DBNAME}'"
        ]
      # test: [ "CMD-SHELL", "pg_isready" ]
      interval: 20s
      timeout: 5s
      retries: 5
    networks:
      - bot-network
  bot:
    build:
      context: ../
      args:
        - VERSION=$VERSION
      dockerfile: Dockerfile
      target: op-bot
    container_name: telegram-bot
    env_file:
      - ./.env
    image: "bot:${VERSION}"
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    ports:
      - "2112:2112"
    networks:
      - bot-network

networks:
  bot-network:
    driver: bridge
